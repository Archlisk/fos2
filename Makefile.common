MAKEFILE_PATH := $(abspath $(lastword $(MAKEFILE_LIST)))
BASE_DIR := $(patsubst %/,%,$(dir $(MAKEFILE_PATH)))

CROSSCOMP_PATH = $(BASE_DIR)/Tools/cross-bin/bin

CXX = g++
LNK = g++

ifndef CXX
CXX = $(CROSSCOMP_PATH)/i686-elf-g++
endif
ifndef ASM
ASM = nasm
endif
ifndef LNK
LNK = $(CROSSCOMP_PATH)/i686-elf-g++
endif

CPP_FLAGS += -masm=intel
ASM_FLAGS +=
LNK_FLAGS +=

LNK_LIBS +=

INCLUDE_FLAGS = $(foreach path,$(INCLUDE_DIRS),\
			-I$(BASE_DIR)/$(path))

AUTO_INCLUDE_FLAGS = $(foreach path,$(AUTO_INCLUDE),\
		     	-include $(BASE_DIR)/$(path))

OBJECTS_CPP = $(patsubst %.cpp,%.o,$(SOURCES_CPP))
OBJECTS_ASM = $(patsubst %.asm,%.o,$(SOURCES_ASM))
OBJECTS = $(OBJECTS_CPP) $(OBJECTS_ASM)

CPP_DEPS = $(patsubst %.o,%.d,$(OBJECTS_CPP))
ASM_DEPS = $(patsubst %.o,%.d,$(OBJECTS_ASM))

ifdef OUT
OUT_PATH = $(BASE_DIR)/Bin/$(OUT)
$(OUT_PATH): $(OBJECTS)
	@echo Linking $(OUT)...
	@$(LNK) $(LNK_FLAGS) -o $(OUT_PATH) $(OBJECTS) $(LNK_LIBS)
endif

ifdef LIB
OUT_PATH = $(BASE_DIR)/Bin/$(LIB)
$(OUT_PATH): $(OBJECTS)
	@echo Linking $(OUT)...
	@$(LNK) $(LNK_FLAGS) -r -o $(OUT_PATH) $(OBJECTS) $(LNK_LIBS)
endif

all: $(OUT_PATH)

-include $(CPP_DEPS)
-include $(ASM_DEPS)

%.o: %.cpp
	@echo Compiling $<...
	@$(CXX) $(CPP_FLAGS) $(INCLUDE_FLAGS) $(AUTO_INCLUDE_FLAGS) -MM -MT $@ -MF $(patsubst %.o,%.d,$@) $<
	@$(CXX) $(CPP_FLAGS) $(INCLUDE_FLAGS) $(AUTO_INCLUDE_FLAGS) -o $@ -c $<

%.o: %.asm
	@echo Compiling $<...
	@$(ASM) $(ASM_FLAGS) -M -MT $@ -MF $(patsubst %.o,%.d,$@) $<
	@$(ASM) $(ASM_FLAGS) -o $@ $<

.PHONY: clean
clean:
	-rm $(OBJECTS) $(CPP_DEPS) $(ASM_DEPS)
